package com.alibou.chat.controller;

import com.alibou.chat.DTO.ChatMessageDto;
import com.alibou.chat.DTO.NewestMessageDto;
import com.alibou.chat.DTO.UserBasicInfoDto;
import com.alibou.chat.model.Message;
import com.alibou.chat.model.User;
import com.alibou.chat.repository.UserRepository;
import com.alibou.chat.service.UserService;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

@Controller // This means that this class is a Controller
@RequestMapping(path="/api") // This means URL's start with /demo (after Application path)
public class UserController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private UserRepository userRepository;
    @Autowired
    private UserService userService;

    @PostMapping(path="/add") // Map ONLY POST Requests
    public @ResponseBody String addNewUser (@RequestParam String name
            , @RequestParam String email) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        User n = new User();
        n.setUsername(name);
        n.setEmail(email);
        userRepository.save(n);
        return "Saved";
    }

    @GetMapping(path="/all")
    public @ResponseBody List<UserBasicInfoDto> getAllUsers() {
        // This returns only id and username
        return userRepository.findAllBasicInfo();
    }

    @GetMapping(path="/list-message-side-bar/{userId}")
    public @ResponseBody List<NewestMessageDto> getAllUsersForSideBar(@PathVariable String userId) {
        return userService.getListMessage(userId);
    }

    @GetMapping(path="/list-message/{chatRoomId}")
    public @ResponseBody List<ChatMessageDto> getMessages(@PathVariable String chatRoomId) {
        return userService.getMessages(chatRoomId);
    }
    
}